{"version":3,"sources":["webpack:///./src/components/Contact/Contact.js","webpack:///./src/pages/contact.js","webpack:///./content/meta/config.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/components/Article/Article.js","webpack:///./src/components/Article/index.js"],"names":["FormItem","Form","Item","TextArea","Input","Contact","props","getFieldDecorator","form","handleSubmit","e","preventDefault","validateFields","err","values","console","log","_this","this","fetch","method","headers","Content-Type","body","data","Object","assign","form-name","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","handleNetworkError","sendMessage","react_default","a","createElement","Fragment","layouts","Consumer","theme","className","style_default","dynamic","color","brand","primary","form_default","name","onSubmit","data-netlify","data-netlify-honeypot","label","rules","whitespace","input_default","required","message","type","placeholder","autosize","minRows","maxRows","button_default","htmlType","styleId","css","propTypes","PropTypes","object","ContactForm","create","ContactPage","objectDestructuringEmpty_default","Article","Headline","title","components_Contact_Contact","Seo","isRequired","module","exports","siteTitle","shortSiteTitle","siteDescription","publisher","siteUrl","siteImage","siteLanguage","authorName","authorTwitterAccount","headerTitle","headerSubTitle","manifestName","manifestShortName","manifestStartUrl","manifestBackgroundColor","manifestThemeColor","manifestDisplay","gravatarImgMd5","postsPerHomePage","postsPerPage","author","authorUrl","userTwitter","shortTitle","shareImage","shareImageWidth","shareImageHeight","siteLogo","backgroundColor","themeColor","copyright","authorSocialLinks","url","postTitle","frontmatter","postDescription","description","postCover","cover","postSlug","fields","slug","config","image","pathPrefix","Helmet_default","htmlAttributes","lang","prefix","content","property","__webpack_require__","d","__webpack_exports__","components_Seo_Seo","children","react__WEBPACK_IMPORTED_MODULE_1___default","styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default","font","size","xxl","space","stack","l","time","duration","long","weight","standard","xs","xl","string","node","inset","default","text","maxWidth","tablet","desktop","components_Article_Article"],"mappings":"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","file":"component---src-pages-contact-js-db2c4190b726a9e14000.js","sourcesContent":["/* eslint no-unused-vars: 0 */\n\nimport { navigate } from \"gatsby\";\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nimport \"antd/lib/form/style/index.css\";\nimport \"antd/lib/input/style/index.css\";\nimport \"antd/lib/button/style/index.css\";\nimport { ThemeContext } from \"../../layouts\";\n\nconst Contact = props => {\n  const { getFieldDecorator } = props.form;\n\n  function encode(data) {\n    return Object.keys(data)\n      .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n      .join(\"&\");\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        sendMessage(values);\n      }\n    });\n  }\n\n  function sendMessage(values) {\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: encode({ \"form-name\": \"contact\", ...values })\n    })\n      .then(() => {\n        console.log(\"Form submission success\");\n        navigate(\"/success\");\n      })\n      .catch(error => {\n        console.error(\"Form submission error:\", error);\n        this.handleNetworkError();\n      });\n  }\n\n  function handleNetworkError(e) {\n    console.log(\"submit Error\");\n  }\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <div className=\"form\">\n            <Form\n              name=\"contact\"\n              onSubmit={handleSubmit}\n              data-netlify=\"true\"\n              data-netlify-honeypot=\"bot-field\"\n            >\n              <FormItem label=\"Name\">\n                {getFieldDecorator(\"name\", {\n                  rules: [\n                    {\n                      whitespace: true\n                    }\n                  ]\n                })(<Input name=\"name\" />)}\n              </FormItem>\n              <FormItem label=\"E-mail\">\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your e-mail address!\",\n                      whitespace: true,\n                      type: \"email\"\n                    }\n                  ]\n                })(<Input name=\"email\" />)}\n              </FormItem>\n              <FormItem label=\"Message\">\n                {getFieldDecorator(\"message\", {\n                  rules: [\n                    { required: true, message: \"Please input your message!\", whitespace: true }\n                  ]\n                })(\n                  <TextArea name=\"message\" placeholder=\"\" autosize={{ minRows: 4, maxRows: 10 }} />\n                )}\n              </FormItem>\n              <FormItem>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </FormItem>\n            </Form>\n\n            {/* --- STYLES --- */}\n            <style jsx>{`\n              .form {\n                background: transparent;\n              }\n              .form :global(.ant-row.ant-form-item) {\n                margin: 0 0 1em;\n              }\n              .form :global(.ant-row.ant-form-item:last-child) {\n                margin-top: 1em;\n              }\n              .form :global(.ant-form-item-control) {\n                line-height: 1em;\n              }\n              .form :global(.ant-form-item-label) {\n                line-height: 1em;\n                margin-bottom: 0.5em;\n              }\n              .form :global(.ant-form-item) {\n                margin: 0;\n              }\n              .form :global(.ant-input) {\n                appearance: none;\n                height: auto;\n                font-size: 1.2em;\n                padding: 0.5em 0.6em;\n              }\n              .form :global(.ant-btn-primary) {\n                height: auto;\n                font-size: 1.2em;\n                padding: 0.5em 3em;\n                background: ${theme.color.brand.primary};\n                border: 1px solid ${theme.color.brand.primary};\n              }\n              .form :global(.ant-form-explain) {\n                margin-top: 0.2em;\n              }\n\n              @from-width desktop {\n                .form :global(input) {\n                  max-width: 50%;\n                }\n              }\n            `}</style>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    </React.Fragment>\n  );\n};\n\nContact.propTypes = {\n  form: PropTypes.object\n};\n\nconst ContactForm = Form.create({})(Contact);\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Contact from \"../components/Contact\";\nimport Headline from \"../components/Article/Headline\";\nimport Seo from \"../components/Seo\";\n\nconst ContactPage = props => {\n  const {\n\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title=\"Contact\" theme={theme} />\n            </header>\n            <Contact theme={theme} />\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nContactPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default ContactPage;","module.exports = {\n  siteTitle: \"Cyber Insurer - protect your business from emerging cyber threats\", // <title>\n  shortSiteTitle: \"Cyber Insurer - GatsbyJS starter\", // <title> ending for posts and pages\n  siteDescription: \"Cyber Insurer is protect your business from emerging cyber threats.\",\n  publisher: 'Cyber Insurer', // Organization name used for SEO schema\n  siteUrl: \"https://cyberinsurer.uk\",\n  // pathPrefix: \"\",\n  siteImage: \"preview.jpg\",\n  siteLanguage: \"en\",\n\n  /* author */\n  authorName: \"Cyber Insurer\",\n  authorTwitterAccount: \"cyberinsureruk\",\n\n  /* info */\n  headerTitle: \"Cyber Insurer\",\n  headerSubTitle: \"Protect your business from emerging cyber threats\",\n\n  /* manifest.json */\n  manifestName: \"CyberInsurer - protect your business from emerging cyber threats\",\n  manifestShortName: \"CyberInsurer\", // max 12 characters\n  manifestStartUrl: \"/index.html\",\n  manifestBackgroundColor: \"white\",\n  manifestThemeColor: \"#666\",\n  manifestDisplay: \"standalone\",\n\n  // gravatar\n  // Use your Gravatar image. If empty then will use src/images/jpg/avatar.jpg\n  // Replace your email adress with md5-code.\n  // Example https://www.gravatar.com/avatar/g.strainovic@gmail.com ->\n  // gravatarImgMd5: \"https://www.gravatar.com/avatar/1db853e4df386e8f699e4b35505dd8c6\",\n  gravatarImgMd5: \"\",\n\n  postsPerHomePage: 7, // Number of posts shown on the 1st page of of the index.js template (home page)\n  postsPerPage: 6, // Number of posts shown on paginated pages\n  author: 'GCN User', // Author for RSS author segment and SEO schema\n  authorUrl: 'https://gcn.netlify.com/about/', // URL used for author and publisher schema, can be a social profile or other personal site\n  userTwitter: '@twitter', // Change for Twitter Cards\n  shortTitle: 'GCN App', // Used for App manifest e.g. Mobile Home Screen\n  shareImage: '/logos/share.jpg', // Open Graph Default Share Image. 1200x1200 is recommended\n  shareImageWidth: 900, // Change to the width of your default share image\n  shareImageHeight: 600, // Change to the height of your default share image\n  siteLogo: '/logos/logo-512.png', // Logo used for SEO, RSS, and App manifest\n  backgroundColor: '#e9e9e9', // Used for Offline Manifest\n  themeColor: '#121212', // Used for Offline Manifest\n  copyright: 'Copyright © 2018 GCN User', // Copyright string for the RSS feed\n\n  // social\n  authorSocialLinks: [\n    { name: \"twitter\", url: \"https://twitter.com/cyberinsureruk\" },\n    { name: \"facebook\", url: \"http://facebook.com/cyberinsureruk\" }\n  ]\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../content/meta/config\";\n\nconst Seo = props => {\n  const { data } = props;\n  const postTitle = ((data || {}).frontmatter || {}).title;\n  const postDescription = ((data || {}).frontmatter || {}).description;\n  const postCover = ((data || {}).frontmatter || {}).cover;\n  const postSlug = ((data || {}).fields || {}).slug;\n\n  const title = postTitle ? `${postTitle} - ${config.shortSiteTitle}` : config.siteTitle;\n  const description = postDescription ? postDescription : config.siteDescription;\n  const image = postCover ? postCover : config.siteImage;\n  const url = config.siteUrl + config.pathPrefix + postSlug;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: config.siteLanguage,\n        prefix: \"og: http://ogp.me/ns#\"\n      }}\n    >\n      {/* General tags */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:type\" content=\"website\" />\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={config.authorTwitterAccount ? config.authorTwitterAccount : \"\"}\n      />\n    </Helmet>\n  );\n};\n\nSeo.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default Seo;\n","export { default } from \"./Seo\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","export { default } from \"./Article\";\n"],"sourceRoot":""}